#include <Arduino.h>
#include <WiFi.h>
#include <WiFiMulti.h>
#include <WebSocketsClient.h>
#include <SPI.h>
#include <LoRa.h>

// Kh·ªüi t·∫°o ƒë·ªëi t∆∞·ª£ng WiFiMulti
WiFiMulti wifiMulti;

// ƒê·ªãnh nghƒ©a ch√¢n LoRa v√† output
#define SS 5
#define RST 14
#define DIO0 2
#define OUTPUT_PIN_ID1 25
#define OUTPUT_PIN_ID2 26

// WiFi credentials
const char *ssid = "Xiaomi 13";
const char *pass = "123456788";

// WebSocket client
WebSocketsClient webSocket;

// H√†m x·ª≠ l√Ω s·ª± ki·ªán t·ª´ WebSocket
void webSocketEvent(WStype_t type, uint8_t * payload, size_t length) {
  switch (type) {
    case WStype_CONNECTED:
      Serial.println("‚úÖ WebSocket connected!");
      break;
    case WStype_DISCONNECTED:
      Serial.println("‚ùå WebSocket disconnected!");
      break;
    case WStype_TEXT:
      Serial.printf("üí¨ WebSocket message: %s\n", payload);
      break;
    default:
      break;
  }
}

void setup() {
  Serial.begin(115200);

  // Boot delay
  for (uint8_t t = 4; t > 0; t--) {
    Serial.printf("[SETUP] BOOT WAIT %d...\n", t);
    Serial.flush();
    delay(1000);
  }

  // K·∫øt n·ªëi WiFi
  wifiMulti.addAP(ssid, pass);
  while (wifiMulti.run() != WL_CONNECTED) {
    delay(100);
  }
  Serial.println("üì∂ WiFi connected!");
  Serial.println("IP Address: " + WiFi.localIP().toString());

  // Kh·ªüi t·∫°o LoRa
  SPI.begin();
  LoRa.setPins(SS, RST, DIO0);
  if (!LoRa.begin(433E6)) {
    Serial.println("‚ùå LoRa init failed!");
    while (1);
  }
  Serial.println("üì° LoRa Receiver started!");

  // Kh·ªüi t·∫°o c√°c ch√¢n output
  pinMode(OUTPUT_PIN_ID1, OUTPUT);
  pinMode(OUTPUT_PIN_ID2, OUTPUT);
  digitalWrite(OUTPUT_PIN_ID1, HIGH);
  digitalWrite(OUTPUT_PIN_ID2, HIGH);

  // C·∫•u h√¨nh WebSocket (host, port, path)
  webSocket.begin("192.168.19.124", 5000, "/");  // host, port, path
  webSocket.onEvent(webSocketEvent);
  webSocket.setReconnectInterval(5000);  // T·ª± ƒë·ªông reconnect m·ªói 5s n·∫øu disconnect
}

void loop() {
  webSocket.loop(); // Lu√¥n c·∫ßn g·ªçi ƒë·ªÉ duy tr√¨ k·∫øt n·ªëi

  // Nh·∫≠n d·ªØ li·ªáu t·ª´ LoRa
  int packetSize = LoRa.parsePacket();
  if (packetSize) {
    String receivedText = "";
    while (LoRa.available()) {
      receivedText += (char)LoRa.read();
    }

    Serial.println("------ Received from LoRa ------");
    Serial.println(receivedText);
    Serial.println("--------------------------------");

    if (receivedText.indexOf("ID1") != -1) {
      Serial.println("üì° Data from ID1:");
      digitalWrite(OUTPUT_PIN_ID1, LOW);
      webSocket.sendTXT(receivedText.c_str());
      delay(100);  // T·∫°m delay ng·∫Øn tr√°nh ch·∫≠p ch·ªùn
      digitalWrite(OUTPUT_PIN_ID1, HIGH);
    } else if (receivedText.indexOf("ID2") != -1) {
      Serial.println("üì° Data from ID2:");
      digitalWrite(OUTPUT_PIN_ID2, LOW);
      webSocket.sendTXT(receivedText.c_str());
      delay(100);
      digitalWrite(OUTPUT_PIN_ID2, HIGH);
    }
  }
}
